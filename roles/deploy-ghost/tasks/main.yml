---

- name: Create Ghost service
  kubernetes.core.k8s:
    state: present
    namespace: default
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: ghost-service 
        labels:
          app: ghost
      spec:
        type: LoadBalancer
        selector:
          app: ghost
        ports:
          - protocol: TCP
            port: "{{ ghost_p }}"
            targetPort: "{{ ghost_tp }}"

- name: fetch service ip
  shell: "kubectl get -n default service ghost-service -o wide | awk '{ print $4}' |  grep -v EXT"
  register: k_ext_ip
  until: k_ext_ip.stdout[0] != "<"
  retries: 2
  delay: 15

- name: load service ip
  kubernetes.core.k8s_info:
    kind: Service
    label_selectors:
      - app=ghost
  register: ghost_service

- name: set ghost ip
  set_fact:
    ghost_service_ip: "{{ ghost_service.resources[0].status.loadBalancer.ingress[0].ip }}"

- name: Set ghost ip in the inventory file
  template:
    src: gcp
    dest: inventory/gcp.yml

- name: create the ghost pod
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Deployment
      metadata:
        name: ghost-deployment
        namespace: default
        labels:
          app: ghost
      spec: 
        replicas: 1
        selector: 
          matchLabels:
            app: ghost
        template:
          metadata:
            labels:
              app: ghost
          spec:
            containers:
            - name: ghost
              image: "{{ ghost_image }}"
              env: # enviroment variables 
              - name: database__client
                value: mysql
              - name: database__connection__host
                value: "{{mysql_host}}"      
              - name: database__connection__user       
                value: "{{ mysql_user }}"
              - name: database__connection__password  
                value: "{{ mysql_password }}"             
              - name: database__connection__database     
                value: "{{ mysql_name_db }}"
              - name: url
                value: "http://{{ ghost_ip }}:{{ ghost_port }}"
              - name: database__connection__port
                value: "{{ mysql_p_string }}"

              # no clue if this will work, ripped from the ghost config page, #pray
              - name: mail__transport
                value: SMTP
              - name: mail__options__service
                value: Mailgun
              - name: mail__options__auth__user
                value: "{{ ghost_email }}"
              - name: mail__options__auth__pass
                value: "{{ ghost_email_pw }}"

- name: register MySQL pod
  kubernetes.core.k8s_info:
    kind: Pod
    label_selectors:
      - app=mysql
  register: db_pod

- name: Check until the MySQL pod is ready
  shell: kubectl get pod {{ db_pod.resources[0].metadata.name }} -o jsonpath='{.status.phase}'
  register: db_pod_ready
  until: db_pod_ready.stdout.find("Running") != -1
  retries: 10
  delay: 20

- name: Create Users table in the database
  shell: kubectl exec -it {{ db_pod.resources[0].metadata.name }} -- /bin/bash -c "mysql -D ghost -e \"SELECT count(*) FROM information_schema.tables WHERE table_schema = 'ghost' AND table_name = 'users'\""
  register: table_users
  until: table_users.stdout.find("1") != -1
  retries: 10
  delay: 20

- name: Admin account create
  shell: kubectl exec -it {{ db_pod.resources[0].metadata.name }} -- /bin/bash -c "mysql -D ghost -e \"UPDATE users SET name='ascn', password='\\\$2b\\\$10\\\$9xMUdA/lQsNJ0W4HeSfJWu8Z9IFmqgq2pz4TycBKcOO.bW/dqgTwu', email='ascn@example.com', status='active' where id=1; SELECT * FROM users WHERE id=1;\""
  register: blog_admin
  until: blog_admin.stdout.find("ascn") != -1
  retries: 10
  delay: 20