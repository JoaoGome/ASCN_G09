---

- name: Create Ghost service
  kubernetes.core.k8s:
    state: present
    namespace: default
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: ghost-service 
        labels:
          app: ghost
      spec:
        type: LoadBalancer
        selector:
          app: ghost
        ports:
          - protocol: TCP
            port: "{{ ghost_port }}"
            targetPort: "{{ ghost_tp }}"

- name: w8 until ghost is running
  shell: "kubectl get -n default service ghost-service -o wide | awk '{print $4}' |  grep -v EXT"
  register: k_ext_ip
  until: k_ext_ip.stdout[0] != "<"
  retries: 20
  delay: 10

- name: load service ip
  kubernetes.core.k8s_info:
    kind: Service
    label_selectors:
      - app=ghost
  register: ghost_service

- name: set ghost ip
  set_fact:
    ghost_ip: "{{ ghost_service.resources[0].status.loadBalancer.ingress[0].ip }}"

- name: Set ghost ip in the inventory file
  template:
    src: gcp
    dest: inventory/gcp.yml

- name: Replace ghost_ip in gcp.yml
  replace:
    path: inventory/gcp.yml
    regexp: 'ghost_ip: \S*'
    replace: 'ghost_ip: {{ ghost_ip }}'

- name: create the ghost pod
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Deployment
      metadata:
        name: ghost-deployment
        namespace: default
        labels:
          app: ghost
      spec: 
        replicas: 1
        selector: 
          matchLabels:
            app: ghost
        template:
          metadata:
            labels:
              app: ghost
          spec:
            containers:
            - name: ghost
              image: "{{ ghost_image }}"
              env: # enviroment variables 
              - name: database__client
                value: mysql
              - name: database__connection__host
                value: "{{ mysql_host }}"      
              - name: database__connection__user       
                value: "{{ mysql_user }}"
              - name: database__connection__password  
                value: "{{ mysql_password }}"             
              - name: database__connection__database     
                value: "{{ mysql_name_db }}"
              - name: url
                value: "http://{{ ghost_ip }}:{{ ghost_port }}"
              - name: database__connection__port
                value: "{{ mysql_p_string }}"

              # does not work properly, multiple option pairings tried but nothing works
              - name: mail__transport
                value: "SMTP"
              - name: mail__options__service
                value: Mailgun
              - name: mail__options__port
                value: "465"
              - name: mail__options__host
                value: "smtp.mailgun.org"
              - name: mail__options__secure
                value: "false"
              - name: mail__options__auth__user
                value: "{{ ghost_email }}"
              - name: mail__options__auth__pass
                value: "{{ ghost_email_pw }}"
              resources:
                requests:
                  cpu: "500m"
            

- name: register MySQL pod
  kubernetes.core.k8s_info:
    kind: Pod
    label_selectors:
      - app=mysql
  register: mysql_pod

- name: Check until the MySQL pod is ready
  shell: kubectl get pod {{ mysql_pod.resources[0].metadata.name }} -o jsonpath='{.status.phase}'
  register: db_pod_ready
  until: db_pod_ready.stdout.find("Running") != -1
  retries: 20
  delay: 5

- name: w8 for ghost to create the users table
  shell: kubectl exec -it {{ mysql_pod.resources[0].metadata.name }} -- /bin/bash -c "mysql -D ghost -e \"SELECT count(*) FROM information_schema.tables WHERE table_schema = 'ghost' AND table_name = 'users'\""
  register: table_users
  until: table_users.stdout.find("1") != -1
  retries: 20
  delay: 5


  # password Ã© ascn123
- name: Admin account create
  shell: kubectl exec -it {{ mysql_pod.resources[0].metadata.name }} -- /bin/bash -c "mysql -D ghost -e \"UPDATE users SET name='ascn', password='\\\$2b\\\$10\\\$7ccB9rulkdjwd/nn4rLZP.0mU.Ebz7EmatHlzb3zFBD/ZrWqQHCI2', email='ascn@example.com', status='active' where id=1; SELECT * FROM users WHERE id=1;\""
  register: blog_admin
  until: blog_admin.stdout.find("ascn") != -1
  retries: 20
  delay: 5

- name: Replace ghost_ip in test file back to placeholder
  replace:
    path: 'http_request.jmx'
    regexp: '<stringProp name="HTTPSampler.domain">\S*</stringProp>'
    replace: '<stringProp name="HTTPSampler.domain">{{ ghost_ip }}</stringProp>'

- name: configure autoscaling
  shell: kubectl autoscale deployment ghost-deployment --min=1 --max=3 --cpu-percent=80


