---

  - name: Create a pod for MySQL db
    kubernetes.core.k8s:
      state: present
      namespace: default
      definition:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: mysql_deployment
          labels:
            app: mysql
            tier: database
        spec:
          selector:
            matchLabels:
              app: mysql
          strategy:
            type: Recreate
          template:
            metadata:
              labels:
                app: mysql
                tier: database
            spec:
              containers:
              - name: mysql
                image: "{{ mysql_image }}"
                env:
                - name: MYSQL_ALLOW_EMPTY_PASSWORD
                  value: "true"
                - name: MYSQL_DATABASE
                  value: "{{ mysql_name_db }}"
                - name: MYSQL_USER
                  value: "{{ mysql_user }}"
                - name: MYSQL_PASSWORD
                  value: "{{ mysql_password }}"
                ports:
                - containerPort: 3306
                volumeMounts:
                - name: mysql_persistent_storage
                  mountPath: /var/lib/mysql
              volumes:
              - name: mysql_persistent_storage
                persistentVolumeClaim:
                  claimName: mysql_pv_claim

  - name: Create PV storage class
    kubernetes.core.k8s:
      state: present
      namespace: default
      src: "mysql_pv_create.yml"

  - name: Create a persistent volume claim for SQL Server
    kubernetes.core.k8s:
      state: present
      namespace: default
      src: "mysql_pvc.yml"

  - name: Create a service for SQL Server
    kubernetes.core.k8s:
      state: present
      namespace: default
      definition:
        apiVersion: v1
        kind: Service
        metadata:
          name: "{{ mysql_host }}" # service / dns name
          labels:
            app: mysql
            tier: database
        spec:
          type: ClusterIP
          selector:
            app: mysql
          ports:
            - targetPort: "{{ mysql_tp }}"
              port: "{{ mysql_p }}"